Day 8: File Input/Output\
Write a C++ program to read data from a file and display its contents on the console.\
Implement a C++ program to copy the contents of one file to another.\
Create a C++ program that takes input from the user and saves it to a file.\
Write a C++ program to count the number of lines, words, and characters in a given text file.\
Implement a C++ program that reads a list of integers from a file, sorts them, and writes the sorted list back to the file.\
Create a C++ program that reads a CSV file containing student names and their marks in different subjects. Calculate and display the total marks and average for each student.\
Write a C++ program that encrypts the contents of a file using a simple substitution cipher and saves the encrypted data to a new file.\
Implement a C++ program to read a binary file containing an array of integers and find the sum of all elements.\
Create a C++ program that reads a text file and replaces all occurrences of a specific word with another word, then saves the modified content to a new file.\
Write a C++ program that reads a text file, removes all punctuation marks, converts all text to lowercase, and saves the modified content to a new file.\


Day 9: Exception Handling
Implement a C++ program that takes two integer inputs from the user and performs division, handling the Divide By Zero exception.\
Create a C++ program that reads a file containing numeric data and calculates the sum. Handle any exceptions that may occur during file reading.\
Write a C++ program that takes user input for age and throws an exception if the age is below 18, indicating it's not suitable for the application.\
Implement a C++ program that reads two float values from the user and performs division, handling the Floating-Point Exception.\
Create a C++ program that reads a text file and attempts to convert its contents to an integer. Handle any exceptions that may arise from invalid input.\
Write a C++ program that takes user input for the number of elements in an array, dynamically allocates memory, and fills the array with user input. Handle any exceptions related to memory allocation.\
Implement a C++ program that performs a risky operation (e.g., accessing an out-of-bounds array element) and catches and handles the appropriate exception.\
Create a C++ program that reads a file containing student data and converts the GPA to a letter grade (e.g., A, B, C, etc.). Handle any exceptions that may occur during the conversion.\
Write a C++ program that takes user input for two integer values and calculates their quotient using only bitwise operators. Handle any exceptions arising from incorrect input.\
Implement a C++ program that reads a string from the user and converts it to an integer using std::stoi(). Handle any exceptions that may occur due to invalid input.}
